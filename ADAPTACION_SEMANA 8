# Importación de módulos

import os
    # Se importa el módulo os, que proporciona funciones para interactuar con el sistema operativo
    #  (como rutas de archivos, navegación de carpetas, etc.).

# Definición de función: mostrar_codigo
def mostrar_codigo(ruta_script):
    # Asegúrate de que la ruta al script es absoluta
    # Esta función recibe como argumento la ruta de un script Python y muestra su contenido por consola.
    ruta_script_absoluta = os.path.abspath(ruta_script)
    # Convierte la ruta relativa del archivo a una ruta absoluta para evitar errores de ubicación.
    try:
        with open(ruta_script_absoluta, 'r') as archivo:
            print(f"\n--- Código de {ruta_script} ---\n")
            print(archivo.read())
    # Intenta abrir el archivo en modo lectura ('r').
    # Si lo logra, imprime un encabezado y luego el contenido completo del archivo.

    except FileNotFoundError:
        print("El archivo no se encontró.")
    # Si el archivo no existe, muestra un mensaje de error.
    except Exception as e:
        print(f"Ocurrió un error al leer el archivo: {e}")
    # Captura cualquier otro error y lo imprime con un mensaje descriptivo.

# Definición de función: mostrar_menu
def mostrar_menu():

    # Define la ruta base donde se encuentra el dashboard.py
    # Esta función gestiona el menú principal que permite al usuario seleccionar un archivo para visualizar.
    
    ruta_base = os.path.dirname(__file__)
    # __file__ se refiere al archivo actual (dashboard.py). Esta línea obtiene su directorio contenedor, útil para construir rutas relativas.


    opciones = {
        '1': 'UNIDAD 1/1.2. Tecnicas de Programacion/1.2.1. Ejemplo Tecnicas de Programacion.py'
        # Agrega aquí el resto de las rutas de los scripts
    }
    # Se define un diccionario con opciones de menú donde:
    # Las claves son las opciones numéricas que el usuario puede ingresar.
    # Los valores son rutas relativas de los scripts Python organizados por unidad/tema.

# Bucle del menú
    while True:
        print("\nMenu Principal - Dashboard")
    # Imprime las opciones del menú
    # Inicia un bucle infinito para que el menú se muestre repetidamente hasta que el usuario decida salir.
        
        for key in opciones:
            print(f"{key} - {opciones[key]}")
        print("0 - Salir")
    # Se imprimen las opciones del menú, seguidas de la opción 0 para salir.

        eleccion = input("Elige un script para ver su código o '0' para salir: ")
    # Pide al usuario que elija una opción.

        if eleccion == '0':
            break
    # Si elige 0, el bucle se rompe y el programa termina.
       
        elif eleccion in opciones:
            # Asegura que el path sea absoluto
            ruta_script = os.path.join(ruta_base, opciones[eleccion])
            mostrar_codigo(ruta_script)
    # Si elige una opción válida, se construye la ruta absoluta del archivo 
    # y se llama a la función mostrar_codigo para mostrar su contenido.
        else:
            print("Opción no válida. Por favor, intenta de nuevo.")
    # Si el usuario escribe una opción inválida, se le muestra un mensaje de advertencia.

# Ejecución principal del script
# Ejecutar el dashboard
if __name__ == "__main__":
    mostrar_menu()
# Este bloque se ejecuta solo si el archivo es ejecutado directamente (no importado como módulo).

# Llama a la función mostrar_menu para iniciar la aplicación.