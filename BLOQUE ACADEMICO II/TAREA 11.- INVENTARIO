import json

# -------------------------
# Clase Producto
# -------------------------
class Producto:
    def __init__(self, id_producto, nombre, cantidad, precio):
        self.id_producto = id_producto
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio

    def __str__(self):
        return f"ID: {self.id_producto} | Nombre: {self.nombre} | Cantidad: {self.cantidad} | Precio: ${self.precio:.2f}"

    def to_dict(self):
        """Convierte el producto en diccionario para guardarlo en archivo."""
        return {
            "id_producto": self.id_producto,
            "nombre": self.nombre,
            "cantidad": self.cantidad,
            "precio": self.precio
        }


# -------------------------
# Clase Inventario
# -------------------------
class Inventario:
    def __init__(self):
        self.productos = {}  # Diccionario con clave ID y valor Producto

    def agregar_producto(self, producto):
        if producto.id_producto in self.productos:
            print("‚ùå Error: El ID ya existe en el inventario.")
        else:
            self.productos[producto.id_producto] = producto
            print("‚úÖ Producto agregado con √©xito.")

    def eliminar_producto(self, id_producto):
        if id_producto in self.productos:
            del self.productos[id_producto]
            print("üóë Producto eliminado.")
        else:
            print("‚ùå Error: No existe un producto con ese ID.")

    def actualizar_producto(self, id_producto, cantidad=None, precio=None):
        if id_producto in self.productos:
            if cantidad is not None:
                self.productos[id_producto].cantidad = cantidad
            if precio is not None:
                self.productos[id_producto].precio = precio
            print("‚úÖ Producto actualizado.")
        else:
            print("‚ùå Error: Producto no encontrado.")

    def buscar_por_nombre(self, nombre):
        encontrados = [p for p in self.productos.values() if nombre.lower() in p.nombre.lower()]
        if encontrados:
            print("üîç Resultados de la b√∫squeda:")
            for p in encontrados:
                print(p)
        else:
            print("‚ùå No se encontraron productos con ese nombre.")

    def mostrar_productos(self):
        if self.productos:
            print("üì¶ Inventario Actual:")
            for p in self.productos.values():
                print(p)
        else:
            print("‚ö†Ô∏è Inventario vac√≠o.")

    # -------------------------
    # Persistencia en archivos
    # -------------------------
    def guardar_en_archivo(self, archivo="inventario.json"):
        with open(archivo, "w") as f:
            json.dump({id: p.to_dict() for id, p in self.productos.items()}, f, indent=4)
        print("üíæ Inventario guardado en archivo.")

    def cargar_desde_archivo(self, archivo="inventario.json"):
        try:
            with open(archivo, "r") as f:
                data = json.load(f)
                self.productos = {id: Producto(**p) for id, p in data.items()}
            print("üìÇ Inventario cargado desde archivo.")
        except FileNotFoundError:
            print("‚ö†Ô∏è Archivo no encontrado. Se iniciar√° un inventario vac√≠o.")


# -------------------------
# Men√∫ Interactivo
# -------------------------
def menu():
    inventario = Inventario()
    inventario.cargar_desde_archivo()

    while True:
        print("\n--- MEN√ö DE INVENTARIO ---")
        print("1. A√±adir producto")
        print("2. Eliminar producto")
        print("3. Actualizar producto")
        print("4. Buscar producto por nombre")
        print("5. Mostrar todos los productos")
        print("6. Guardar inventario en archivo")
        print("7. Salir")
        opcion = input("Seleccione una opci√≥n: ")

        if opcion == "1":
            id_producto = input("ID del producto: ")
            nombre = input("Nombre: ")
            cantidad = int(input("Cantidad: "))
            precio = float(input("Precio: "))
            producto = Producto(id_producto, nombre, cantidad, precio)
            inventario.agregar_producto(producto)

        elif opcion == "2":
            id_producto = input("Ingrese el ID del producto a eliminar: ")
            inventario.eliminar_producto(id_producto)

        elif opcion == "3":
            id_producto = input("Ingrese el ID del producto a actualizar: ")
            cantidad = input("Nueva cantidad (dejar vac√≠o si no desea cambiar): ")
            precio = input("Nuevo precio (dejar vac√≠o si no desea cambiar): ")
            inventario.actualizar_producto(
                id_producto,
                cantidad=int(cantidad) if cantidad else None,
                precio=float(precio) if precio else None
            )

        elif opcion == "4":
            nombre = input("Ingrese el nombre a buscar: ")
            inventario.buscar_por_nombre(nombre)

        elif opcion == "5":
            inventario.mostrar_productos()

        elif opcion == "6":
            inventario.guardar_en_archivo()

        elif opcion == "7":
            inventario.guardar_en_archivo()
            print("üëã Saliendo del sistema. ¬°Hasta pronto!")
            break

        else:
            print("‚ùå Opci√≥n no v√°lida.")


# -------------------------
# Ejecuci√≥n
# -------------------------
if __name__ == "__main__":
    menu()
