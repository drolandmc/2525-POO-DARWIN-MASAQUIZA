class Producto:
    def __init__(self, id, nombre, cantidad, precio):
        self.id = id
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio

    # Getters
    def get_id(self):
        return self.id
    
    def get_nombre(self):
        return self.nombre
    
    def get_cantidad(self):
        return self.cantidad
    
    def get_precio(self):
        return self.precio
    
    # Setters
    def set_cantidad(self, nueva_cantidad):
        self.cantidad = nueva_cantidad
    
    def set_precio(self, nuevo_precio):
        self.precio = nuevo_precio
    
    def __str__(self):
        return f"ID: {self.id} | Producto: {self.nombre} | Cantidad: {self.cantidad} | Precio: ${self.precio:.2f}"


class Inventario:
    def __init__(self):
        self.productos = []
    
    def agregar_producto(self, producto):
        # Verificar ID único
        if any(p.get_id() == producto.get_id() for p in self.productos):
            print("\nError: Ya existe un producto con ese ID")
            return False
        self.productos.append(producto)
        print("\nProducto agregado exitosamente")
        return True
    
    def eliminar_producto(self, id):
        for i, p in enumerate(self.productos):
            if p.get_id() == id:
                del self.productos[i]
                print("\nProducto eliminado exitosamente")
                return True
        print("\nError: No se encontró producto con ese ID")
        return False
    
    def actualizar_producto(self, id, cantidad=None, precio=None):
        for p in self.productos:
            if p.get_id() == id:
                if cantidad is not None:
                    p.set_cantidad(cantidad)
                if precio is not None:
                    p.set_precio(precio)
                print("\nProducto actualizado exitosamente")
                return True
        print("\nError: No se encontró producto con ese ID")
        return False
    
    def buscar_por_nombre(self, nombre):
        resultados = []
        nombre_lower = nombre.lower()
        for p in self.productos:
            if nombre_lower in p.get_nombre().lower():
                resultados.append(p)
        return resultados
    
    def mostrar_productos(self):
        if not self.productos:
            print("\nInventario vacío")
            return
        print("\n--- INVENTARIO ACTUAL ---")
        for producto in self.productos:
            print(producto)


# Interfaz de Usuario en Consola
def menu_principal():
    inventario = Inventario()
    
    while True:
        print("\n" + "="*50)
        print("SISTEMA DE GESTIÓN DE INVENTARIOS")
        print("="*50)
        print("1. Agregar nuevo producto")
        print("2. Eliminar producto por ID")
        print("3. Actualizar producto")
        print("4. Buscar producto por nombre")
        print("5. Mostrar todos los productos")
        print("6. Salir")
        
        opcion = input("\nSeleccione una opción: ")
        
        if opcion == "1":
            print("\n" + "-"*50)
            print("AGREGAR NUEVO PRODUCTO")
            print("-"*50)
            try:
                id = int(input("Ingrese ID: "))
                nombre = input("Ingrese nombre: ")
                cantidad = int(input("Ingrese cantidad: "))
                precio = float(input("Ingrese precio: "))
                
                nuevo_producto = Producto(id, nombre, cantidad, precio)
                inventario.agregar_producto(nuevo_producto)
            except ValueError:
                print("\nError: Ingrese valores numéricos válidos para ID, cantidad y precio")
        
        elif opcion == "2":
            print("\n" + "-"*50)
            print("ELIMINAR PRODUCTO")
            print("-"*50)
            try:
                id = int(input("Ingrese ID del producto a eliminar: "))
                inventario.eliminar_producto(id)
            except ValueError:
                print("\nError: Ingrese un ID válido (número entero)")
        
        elif opcion == "3":
            print("\n" + "-"*50)
            print("ACTUALIZAR PRODUCTO")
            print("-"*50)
            try:
                id = int(input("Ingrese ID del producto a actualizar: "))
                print("\nDeje en blanco los campos que no desea modificar")
                
                cantidad_input = input("Nueva cantidad: ")
                precio_input = input("Nuevo precio: ")
                
                cantidad = int(cantidad_input) if cantidad_input.strip() != "" else None
                precio = float(precio_input) if precio_input.strip() != "" else None
                
                inventario.actualizar_producto(id, cantidad, precio)
            except ValueError:
                print("\nError: Ingrese valores numéricos válidos")
        
        elif opcion == "4":
            print("\n" + "-"*50)
            print("BUSCAR PRODUCTO")
            print("-"*50)
            nombre = input("Ingrese nombre o parte del nombre: ")
            resultados = inventario.buscar_por_nombre(nombre)
            
            if resultados:
                print("\n--- RESULTADOS DE BÚSQUEDA ---")
                for p in resultados:
                    print(p)
            else:
                print("\nNo se encontraron productos con ese nombre")
        
        elif opcion == "5":
            inventario.mostrar_productos()
        
        elif opcion == "6":
            print("\nSaliendo del sistema...")
            break
        
        else:
            print("\nOpción inválida. Intente nuevamente.")

if __name__ == "__main__":
    menu_principal()